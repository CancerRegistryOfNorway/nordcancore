% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{handle_subset_arg}
\alias{handle_subset_arg}
\alias{subset_and}
\title{Handle Function Subset Argument}
\usage{
handle_subset_arg(
  subset_arg_nm = "subset",
  dataset = emptyenv(),
  function_env = parent.frame(1L),
  enclosing_env = parent.frame(2L),
  function_call = sys.call(1L)
)

subset_and(subset1, subset2)
}
\arguments{
\item{subset_arg_nm}{\verb{[character]} (mandatory, default \code{"subset"})

name of subset argument of the function where this function is used}

\item{dataset}{\verb{[environment, data.frame]} (optional, default \code{emptyenv()})

if \code{subset} is an expression, it can evaluated in this context;
see ?eval}

\item{function_env}{\verb{[environment]} (optional, default \code{parent.frame(1L)})

env where to collect \code{subset} expression from --- the default should work}

\item{enclosing_env}{\verb{[environment]} (optional, default \code{parent.frame(2L)})

env where to continue scoping after \code{dataset}; think of this as the env
where \code{dataset} exists if it is a data.frame}

\item{function_call}{\verb{[call]} (optional, default \code{sys.call(1L)})

in case a warning is emitted due to NA values in the subset, this call
is passed to \link[base:conditions]{base::simpleWarning}.}

\item{subset1}{\verb{[NULL, integer, logical]} (mandatory, no default)
subset to combine with subset2}

\item{subset2}{\verb{[NULL, integer, logical]} (mandatory, no default)
subset to combine with subset1}
}
\description{
This function is intended to be used inside other functions to handle that
function's argument \code{subset}.
}
\details{
The subset arg can be one of \code{logical}, \code{integer}, or \code{NULL}. \code{NULL} implies
no subset. \code{logical} must be of length \code{nrow(dataset)}, if \code{dataset} is a
data.frame. Similarly, \code{integer} subset must have values in between
\code{-nrow(dataset)} and \code{nrow(dataset)}.

\code{subset_and} is used to combine two results of \code{handle_subset_arg}.
If both \code{subset1} and \code{subset2} are logical, this is the same as
\code{subset1 & subset2}. However, this function handles all the possible pairs
of classes of \code{subset1} and \code{subset2} intelligently.
}
\section{Functions}{
\itemize{
\item \code{subset_and()}: intersect two subsetting vectors

}}
\examples{

my_fun <- function(x, subset = NULL) {
  stopifnot(is.data.frame(x))
  evaluated_subset <- handle_subset_arg(dataset = x)
  if (is.null(evaluated_subset)) {
    n <- nrow(x)
  } else {
    n <- length(x[[1]][evaluated_subset])
  }
  return(n)
}

df <- data.frame(a = 1:5, b = 5:1)
my_fun(x = df, subset = df$a > 3)
my_fun(x = df, subset = a > 3)
my_fun(x = df, subset = 1:3)
}
